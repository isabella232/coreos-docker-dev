#coreos:
    units:
        - name: etcd2.service
          command: start
        - name: fleet.service
          command: start
        - name: docker.service
          command: start
          content: |
              .include /usr/lib/systemd/system/docker.service
              [Service]
              # Use our own dns, instead of the host's.
              EnvironmentFile=/var/lib/skydns/envvars
              ExecStart=
              ExecStart=/usr/bin/docker -d \
                  --dns=$private_ipv4 --dns-search=${LOCAL_DOMAIN} \
                  --insecure-registry 10.0.0.0/8 --insecure-registry 172.16.0.0/12 --insecure-registry 192.168.0.0/16 --insecure-registry registry.docker.local
        - name: docker-tcp.socket
          command: start
          enable: true
          content: |
              [Unit]
              Description=Docker Socket for the API
              
              [Socket]
              ListenStream=2375
              Service=docker.service
              BindIPv6Only=both
              
              [Install] 
              WantedBy=sockets.target
              WantedBy=docker.service
        - name: skydns.service
          command: start
          content: |
              [Unit]
              Description=skydns
              Requires=etcd2.service
              After=etcd2.service
              Requires=systemd-resolved.service
              After=systemd-resolved.service
              
              [Service]  
              Type=simple
              Restart=always
              RestartSec=5
              EnvironmentFile=/etc/environment
              EnvironmentFile=/var/lib/skydns/envvars
              ExecStartPre=/usr/bin/docker pull skynetservices/skydns
              ExecStartPre=/var/lib/apps/bin/set-skydns-config ${SKYDNS_CONFIG}
              # make sure the skydns config is set in etcd:
              # ExecStartPre=/bin/bash -c "etcdctl get /skydns/config"
              ExecStart=/usr/bin/docker run --net host skynetservices/skydns
              # with etcd, skydns may not need to sync with each other anymore:
              ExecStartPost=-/var/lib/apps/bin/dns-set x%m.ns.dns ${COREOS_PRIVATE_IPV4}
              ExecStopPost=-/var/lib/apps/bin/dns-delete x%m.ns.dns
              # set the system resolver to use local skydns
              ExecStartPost=/bin/bash -c "ln -sf /etc/resolv.conf.skydns /etc/resolv.conf"
              ExecStopPost=/bin/bash -c "ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf"
        - name: host-register.service
          command: start
          content: |
              # this unit keep host registered with dns very TTL defined in /var/lib/apps/skydns/envvars
              # used as the basic health check of the vm
              [Unit]
              Description=Host DNS Register
              Requires=docker.service
              After=docker.service
              
              [Service]
              EnvironmentFile=/etc/environment
              EnvironmentFile=/var/lib/apps/skydns/envvars
              ExecStart=/var/lib/apps/bin/dns-register %H ${COREOS_PRIVATE_IPV4}
              ExecStop=/var/lib/apps/bin/dns-delete %H
              Restart=always
              RestartSec=5
        - name: registry.service
          command: start
          content: |             
              [Unit]
              Description=Docker Image Registry
              Requires=docker.service
              After=docker.service
              ConditionHost=n1
              
              [Service]
              EnvironmentFile=/etc/environment
              EnvironmentFile=/var/lib/apps/skydns/envvars
              TimeoutStartSec=300
              ExecStartPre=/usr/bin/bash -c "/var/lib/apps/bin/is_loaded registry:latest || /var/lib/apps/bin/dkload registry.tgz || docker pull registry:2.2.1 && docker tag -f registry:2.2.1 registry:latest"
              ExecStartPre=-/usr/bin/docker rm -f %n
              ExecStart=/usr/bin/docker run  --rm --name %n -p 80:5000 \
                      -v /var/lib/apps-data/registry:/var/lib/registry \
                      -v /var/lib/apps/registry/config.yml:/etc/docker/registry/config.yml \
                      registry:latest
              ExecStartPost=/var/lib/apps/bin/dns-set 'registry' "%H.${LOCAL_DOMAIN}"
              ExecStopPost=-/var/lib/apps/bin/dns-delete 'registry'
              RestartSec=5
              Restart=always
